TESTS = \
	bin/unit_test \
	bin/run_regr    # Must always be last

check_PROGRAMS += $(TESTS)

bin_unit_test_SOURCES = \
	test/test_util.c \
	test/test_util.h \
	test/unit_test.c \
	test/test_ident.c \
	test/test_lower.c \
	test/test_parse.c \
	test/test_lib.c \
	test/test_sem.c \
	test/test_simp.c \
	test/test_hash.c \
	test/test_elab.c \
	test/test_heap.c \
	test/test_group.c \
	test/test_bounds.c \
	test/test_value.c \
	test/test_json.c

bin_unit_test_LDADD = lib/libnvc.a lib/librt.a lib/libfastlz.a \
	$(CHECK_LIBS) $(POW_LIB) $(libdw_LIBS) lib/libjson.a

bin_run_regr_SOURCES = test/run_regr.c

TESTS_ENVIRONMENT = \
	BUILD_DIR=$(top_builddir) \
	LIB_DIR=$(abs_top_builddir)/lib \
	EXEEXT=$(EXEEXT)

if ENABLE_VHPI
test/run_regr: $(VHPI_PLUGINS)

TESTS_ENVIRONMENT += HAVE_VHPI=1
endif

src = $(top_srcdir)/src
build = $(top_builddir)/src
shared = $(src)/util.c
covdir = $(top_builddir)/coverage

clean-test:
	-test ! -d logs || rm -r logs

if ENABLE_GCOV

cov-reset:
	rm -rf $(covdir)
	find $(top_builddir) -name '*.gcda' -exec rm {} \;
	lcov --directory $(build) --zerocounters

cov-report:
	mkdir -p $(covdir)
	lcov --directory $(build) --capture --output-file $(covdir)/nvc.info
	genhtml -o $(covdir) $(covdir)/nvc.info
	-x-www-browser $(covdir)/index.html

endif
